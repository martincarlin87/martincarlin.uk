image: centos:7

stages:
    - compile
    - deploy
    
compile:
  image: node:8.15-alpine
  stage: deploy
  script:
    - npm install node-sass
    - node-sass ./content/themes/carlin/assets/sass/input.scss ./content/themes/carlin/assets/css/screen2.css --style compressed
  only:
      - master
  artifacts:
    paths:
    - ./content/themes/carlin/assets/css

before_script:
    
production:
    stage: deploy
    script:
        - yum install which -y
        # install ssh-agent if not already installed, it is required by docker
        - 'which ssh-agent || ( yum install openssh-clients -y )'
        # run ssh-agent (inside the build environment)
        - eval $(ssh-agent -s)
        # add the ssh key stored in SSH_PRIVATE_KEY variable to the agent store
        - ssh-add <(echo "$SSH_PRIVATE_KEY")
        # for docker builds disable host key checking although this can lead to
        # mitm attacks; only use this in docker or it will overwrite the host
        # ssh config!
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
        - yum install rsync -y
        - ssh -t martin@$CI_DEPLOY_IP
        - mkdir -p /srv/www/martincarlin.uk
        - rsync -rav -e ssh --exclude='.git/' --exclude='.gitignore' --exclude='.gitlab-ci.yml' --exclude='.env.local' --exclude='config.development.json' ./ martin@$CI_DEPLOY_IP:/srv/www/martincarlin.uk
        - ssh martin@$CI_DEPLOY_IP "cd /srv/www/martincarlin.uk && docker-compose up -d --force-recreate"
        - ssh -t martin@$CI_DEPLOY_IP "sudo find /srv/www/martincarlin.uk -type d -exec chmod 755 {} +"
        - ssh -t martin@$CI_DEPLOY_IP "sudo find /srv/www/martincarlin.uk -type f -exec chmod 644 {} +"
        - ssh -t martin@$CI_DEPLOY_IP "sudo chmod 755 /srv/www/martincarlin.uk"
    only:
        - master
        